#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º —Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º –∫–∞–Ω–∞–ª–æ–º

echo "üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –∫–∞–Ω–∞–ª–∞"
echo "===================================="
echo ""

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
echo "1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞:"
if [ -f .env ]; then
    echo "‚úÖ –§–∞–π–ª .env –Ω–∞–π–¥–µ–Ω"
    echo ""
    echo "–°–æ–¥–µ—Ä–∂–∏–º–æ–µ (—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è):"
    grep -E "TECHNICAL_CHANNEL_ID|SEND_WARMING_NOTIFICATIONS" .env || echo "‚ö†Ô∏è –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ .env"
else
    echo "‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!"
fi

echo ""
echo "2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ:"
docker-compose exec -T app python -c "
from app.config import config
print(f'TECHNICAL_CHANNEL_ID: {config.TECHNICAL_CHANNEL_ID}')
print(f'SEND_WARMING_NOTIFICATIONS: {config.SEND_WARMING_NOTIFICATIONS}')
print(f'–¢–∏–ø TECHNICAL_CHANNEL_ID: {type(config.TECHNICAL_CHANNEL_ID)}')
if config.TECHNICAL_CHANNEL_ID:
    print('‚úÖ ID –∫–∞–Ω–∞–ª–∞ –∑–∞–≥—Ä—É–∂–µ–Ω')
else:
    print('‚ùå ID –∫–∞–Ω–∞–ª–∞ –ù–ï –∑–∞–≥—Ä—É–∂–µ–Ω')
" 2>/dev/null || echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"

echo ""
echo "3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ:"
docker-compose logs app | grep -E "Warming notifications|Technical channel" | tail -5

echo ""
echo "4Ô∏è‚É£ –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª:"
docker-compose exec -T app python -c "
import asyncio
from aiogram import Bot
from app.config import config

async def test():
    if not config.TECHNICAL_CHANNEL_ID:
        print('‚ùå TECHNICAL_CHANNEL_ID –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω!')
        return
    
    bot = Bot(token=config.TELEGRAM_BOT_TOKEN)
    try:
        print(f'üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª: {config.TECHNICAL_CHANNEL_ID}')
        await bot.send_message(
            chat_id=config.TECHNICAL_CHANNEL_ID,
            text='üß™ <b>–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è</b>\n\n–ï—Å–ª–∏ –≤—ã –≤–∏–¥–∏—Ç–µ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–∞–Ω–∞–ª –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ!',
            parse_mode='HTML'
        )
        print('‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!')
        print('–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∞—à –∫–∞–Ω–∞–ª.')
    except Exception as e:
        print(f'‚ùå –û—à–∏–±–∫–∞: {type(e).__name__}: {e}')
        print('')
        if 'not found' in str(e).lower() or 'chat not found' in str(e).lower():
            print('–ü—Ä–∏—á–∏–Ω–∞: –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π ID –∫–∞–Ω–∞–ª–∞')
            print('–†–µ—à–µ–Ω–∏–µ: –ü–æ–ª—É—á–∏—Ç–µ ID –∫–∞–Ω–∞–ª–∞ –∑–∞–Ω–æ–≤–æ —á–µ—Ä–µ–∑ @userinfobot')
        elif 'forbidden' in str(e).lower():
            print('–ü—Ä–∏—á–∏–Ω–∞: –ë–æ—Ç –Ω–µ –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞–Ω–∞–ª—É')
            print('–†–µ—à–µ–Ω–∏–µ:')
            print('  1. –î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ –∫–∞–Ω–∞–ª –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞')
            print('  2. –î–∞–π—Ç–µ –ø—Ä–∞–≤–∞ \"–ü—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è\"')
        else:
            print(f'–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞. –ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ: {e}')
    finally:
        await bot.session.close()

asyncio.run(test())
" 2>/dev/null || echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Ç–µ—Å—Ç"

echo ""
echo "===================================="
echo "üìã –ò—Ç–æ–≥ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω"
echo ""
echo "–ï—Å–ª–∏ —Ç–µ—Å—Ç –Ω–µ –ø—Ä–æ—à–µ–ª, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ:"
echo "1. –ë–æ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–∞–Ω–∞–ª –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
echo "2. –£ –±–æ—Ç–∞ –µ—Å—Ç—å –ø—Ä–∞–≤–æ '–ü—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è'"
echo "3. ID –∫–∞–Ω–∞–ª–∞ —É–∫–∞–∑–∞–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ (–ø–æ–ª—É—á–µ–Ω —á–µ—Ä–µ–∑ @userinfobot)"
echo "4. –ü–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è .env –≤—ã–ø–æ–ª–Ω–µ–Ω–æ: docker-compose restart app"

